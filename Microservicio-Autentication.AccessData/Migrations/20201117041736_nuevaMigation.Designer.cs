// <auto-generated />
using Microservicio_Autentication.AccessData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microservicio_Autentication.AccessData.Migrations
{
    [DbContext(typeof(GenericContex))]
    [Migration("20201117041736_nuevaMigation")]
    partial class nuevaMigation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microservicio_Autentication.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(45)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            TipoRol = "Profesor"
                        },
                        new
                        {
                            RolId = 2,
                            TipoRol = "Estudiante"
                        });
                });

            modelBuilder.Entity("Microservicio_Autentication.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 20,
                            Apellido = "Olivera",
                            Contraseña = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            Email = "lolivera.unaj@gmail.com",
                            Nombre = "Lucas"
                        },
                        new
                        {
                            UsuarioId = 21,
                            Apellido = "Conde",
                            Contraseña = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            Email = "sergiounaj@gmail.com",
                            Nombre = "Sergio"
                        },
                        new
                        {
                            UsuarioId = 22,
                            Apellido = "Jorge",
                            Contraseña = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            Email = "octaviojorge37@gmail.com",
                            Nombre = "Octavio"
                        },
                        new
                        {
                            UsuarioId = 23,
                            Apellido = "Amet",
                            Contraseña = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            Email = "leonardoAmet@gmail.com",
                            Nombre = "Leonardo"
                        },
                        new
                        {
                            UsuarioId = 24,
                            Apellido = "Osio",
                            Contraseña = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            Email = "jorgeosio@gmail.com",
                            Nombre = "Jorge"
                        },
                        new
                        {
                            UsuarioId = 25,
                            Apellido = "Rosa",
                            Contraseña = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            Email = "mariarosa@gmail.com",
                            Nombre = "Maria"
                        });
                });

            modelBuilder.Entity("Microservicio_Autentication.Domain.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("UsuarioRolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioRolId");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioRoles");
                });

            modelBuilder.Entity("Microservicio_Autentication.Domain.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Microservicio_Autentication.Domain.Entities.Rol", "Roles")
                        .WithMany("UsuarioRolNavigator")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microservicio_Autentication.Domain.Entities.Usuario", "Usuarios")
                        .WithMany("UsuarioRolNavigator")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
